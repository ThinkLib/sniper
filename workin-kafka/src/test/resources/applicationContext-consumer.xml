<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />
	<context:property-placeholder location="application.properties" />

	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="0" />
				<entry key="enable.auto.commit" value="true" />
				<entry key="auto.commit.interval.ms" value="1000" />
				<entry key="session.timeout.ms" value="15000" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="keyDeserializer" class="org.apache.kafka.common.serialization.IntegerDeserializer" />
	<bean id="valueDeserializer" class="org.workin.kafka.serialization.KafkaJsonDeserializer" >
		<constructor-arg name="typeClass" value="org.workin.kafka.test.Message" />
	</bean>

	<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg index="0" ref="consumerProperties" />
		<constructor-arg index="1" ref="keyDeserializer" />
		<constructor-arg index="2" ref="valueDeserializer" />
	</bean>
	
	<!-- 消费者容器配置信息 -->
	<bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
		<!-- 需要监听消费的topic名称 -->
		<constructor-arg value="test" />
		<!-- 接收到消息后调用的消费服务 -->
		<property name="messageListener" >
			<bean class="org.workin.kafka.consumer.listener.ConsumeLoggerListener" />
		</property>
	</bean>

	<!-- 消费者监听容器，初始化调用doStart，然后调用ContainerProperties里配置的自定义消费服务 -->
	<bean id="messageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
		init-method="start">
		<constructor-arg ref="consumerFactory" />
		<constructor-arg ref="containerProperties" />
	</bean>

</beans>